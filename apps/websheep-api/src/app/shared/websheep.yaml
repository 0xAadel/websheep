openapi: "3.0.0"
info:
  version: 1.0.0
  title: Websheep
  description: |
    * [JSON specification](specification.json)
    * [YAML specification](specification.yaml)
  license:
    name: MIT
servers:
  - url: http://localhost:3333/v1
paths:
  /tokens:
    post:
      summary: Create a token
      tags:
        - Authentication
      operationId: createToken
      requestBody:
        description: Farmer credentials
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        201:
          description: Farmer id and token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'

  /farmers/{farmerId}:
    get:
      summary: Get farmer
      tags:
        - Farmer
      operationId: getFarmer
      parameters:
        - in: path
          name: farmerId
          required: true
          schema:
            type: string
          description: The farmer's id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Farmer'
      security:
        - BearerAuth: []

  /farmers/{farmerId}/sheep:
    get:
      summary: Get farmer's sheep
      tags:
        - Sheep
      operationId: getFarmerSheep
      parameters:
        - in: path
          name: farmerId
          required: true
          schema:
            type: string
          description: The farmer's id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SheepListResponse'

components:
  schemas:
    Credentials:
      type: object
      required:
        - userName
        - password
      properties:
        userName:
          type: string
          example: karinelemarchand
        password:
          type: string
          format: password
          example: '123456'

    Farmer:
      type: object
      properties:
        id:
          type: string
        kind:
          type: string
          enum: ['farmer']
        firstName:
          type: string
        lastName:
          type: string

    ListResponse:
      type: object
      properties:
        next:
          type: string
        previous:
          type: string
        totalCount:
          type: number
        items:
          type: array
          # Any type
          items: {}

    Sheep:
      type: object
      properties:
        id:
          type: string
        kind:
          type: string
          enum: ['sheep']
        name:
          type: string

    SheepListResponse:
      allOf:
        - $ref: '#/components/schemas/ListResponse'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/Sheep'

    TokenResponse:
      type: object
      required:
        - id
        - token
        - userId
      properties:
        id:
          type: string
          description: Token's id
        token:
          type: string
          description: Token's value
        userId:
          type: string
      description: User's id
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
